spring:
  # Database Configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://asyncsite-mysql:3306/notidb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&characterEncoding=utf8&useUnicode=true&createDatabaseIfNotExist=true}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:asyncsite_root_2024!}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 600000
      max-lifetime: 1800000
      
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: ${SPRING_JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: false
        jdbc:
          time_zone: UTC
        
  # Mail Configuration (deprecated - for backward compatibility)
  mail:
    host: ${SPRING_MAIL_HOST:smtp.gmail.com}
    port: ${SPRING_MAIL_PORT:587}
    username: ${SPRING_MAIL_USERNAME:asyncsite@gmail.com}
    password: ${SPRING_MAIL_PASSWORD:unkhpoegvshusagl}
    properties:
      mail:
        smtp:
          auth: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
          starttls:
            enable: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:true}
          connection-timeout: 5000
          timeout: 5000
          write-timeout: 5000
        debug: true

  # Multi Mail Configurations
  mail-configs:
    default:
      host: ${MAIL_DEFAULT_HOST:smtp.gmail.com}
      port: ${MAIL_DEFAULT_PORT:587}
      username: ${MAIL_DEFAULT_USERNAME:asyncsite@gmail.com}
      password: ${MAIL_DEFAULT_PASSWORD:unkhpoegvshusagl}
      from-name: ${MAIL_DEFAULT_FROM_NAME:AsyncSite}
      properties:
        mail:
          smtp:
            auth: true
            starttls:
              enable: true
            connection-timeout: 5000
            timeout: 5000
            write-timeout: 5000
    querydaily:
      host: ${MAIL_QUERYDAILY_HOST:smtp.gmail.com}
      port: ${MAIL_QUERYDAILY_PORT:587}
      username: ${MAIL_QUERYDAILY_USERNAME:official.querydaily@gmail.com}
      password: ${MAIL_QUERYDAILY_PASSWORD:zajo fczh roba lkry}
      from-name: ${MAIL_QUERYDAILY_FROM_NAME:QueryDaily}
      properties:
        mail:
          smtp:
            auth: true
            starttls:
              enable: true
            connection-timeout: 5000
            timeout: 5000
            write-timeout: 5000

  # Thymeleaf Configuration (explicit to ensure template resolution in docker profile)
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: true
    
  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:asyncsite-kafka:9092}
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.asyncsite.*"
        spring.json.use.type.headers: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Eureka Client Configuration
eureka:
  instance:
    hostname: noti-service
    prefer-ip-address: true
    instance-id: ${EUREKA_INSTANCE_INSTANCE_ID:${spring.application.name}:${server.port}}
    metadata-map:
      version: ${EUREKA_INSTANCE_METADATA_MAP_VERSION:1.0.0}
      zone: ${EUREKA_INSTANCE_METADATA_MAP_ZONE:docker}
  client:
    enabled: ${EUREKA_CLIENT_ENABLED:true}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://asyncsite-eureka:8761/eureka/}
    registry-fetch-interval-seconds: 5
    instance-info-replication-interval-seconds: 5

# Server Configuration
server:
  port: 8089
  forward-headers-strategy: framework
  
# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,metrics,prometheus}
  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:always}
      probes:
        enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
    db:
      enabled: ${MANAGEMENT_HEALTH_DB_ENABLED:true}
    mail:
      enabled: false

# Application Specific Configuration
application:
  notification:
    email:
      enabled: ${APPLICATION_NOTIFICATION_EMAIL_ENABLED:true}
      retry-attempts: ${APPLICATION_NOTIFICATION_EMAIL_RETRY_ATTEMPTS:3}
      retry-delay: ${APPLICATION_NOTIFICATION_EMAIL_RETRY_DELAY:5000}
      from-address: ${APPLICATION_NOTIFICATION_EMAIL_FROM_ADDRESS:asyncsite@gmail.com}
      from-name: ${APPLICATION_NOTIFICATION_EMAIL_FROM_NAME:AsyncSite}
    discord:
      enabled: ${APPLICATION_NOTIFICATION_DISCORD_ENABLED:true}
      webhook-url: ${APPLICATION_NOTIFICATION_DISCORD_WEBHOOK_URL:}
      retry-attempts: ${APPLICATION_NOTIFICATION_DISCORD_RETRY_ATTEMPTS:3}
      retry-delay: ${APPLICATION_NOTIFICATION_DISCORD_RETRY_DELAY:3000}
    async:
      core-pool-size: ${APPLICATION_NOTIFICATION_ASYNC_CORE_POOL_SIZE:5}
      max-pool-size: ${APPLICATION_NOTIFICATION_ASYNC_MAX_POOL_SIZE:10}
      queue-capacity: ${APPLICATION_NOTIFICATION_ASYNC_QUEUE_CAPACITY:100}
      thread-name-prefix: ${APPLICATION_NOTIFICATION_ASYNC_THREAD_NAME_PREFIX:noti-async-}
  querydaily:
    base-url: ${QUERYDAILY_BASE_URL:https://querydaily.asyncsite.com}

# Logging Configuration
logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    com.asyncsite.notiservice: ${LOGGING_LEVEL_COM_ASYNCSITE_NOTISERVICE:INFO}
    org.springframework.web: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB:INFO}
    org.hibernate.SQL: ${LOGGING_LEVEL_ORG_HIBERNATE_SQL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  file:
    name: /app/logs/noti-service.log
    max-size: 10MB
    max-history: 30