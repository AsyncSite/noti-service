spring:

  application:
    name: noti-service

  # Database Configuration
  datasource:
    url: jdbc:mysql://localhost:3306/notidb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
    username: noti
    password: noti1234
    driver-class-name: com.mysql.cj.jdbc.Driver

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true

  # Flyway Configuration

  # Mail Configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: asyncsite@gmail.com
    password: unkhpoegvshusagl
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # Thymeleaf Configuration
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:asyncsite-kafka:9092}
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.asyncsite.*"
        spring.json.type.mapping: "passkeyOtpRequested:com.asyncsite.notiservice.adapter.in.event.dto.PasskeyOtpRequestedEvent"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

# Server Configuration
server:
  port: 8089

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    com.asyncsite: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  file:
    name: logs/noti-service.log

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    display-request-duration: true

# Application Kafka Topics  
kafka:
  topics:
    notification: asyncsite.noti
    passkey-otp: asyncsite.passkey.otp
    password-reset: asyncsite.password.reset
    user-events: asyncsite.user.events

# Event Configuration  
event:
  enabled: true  # Feature toggle for Kafka consumers
